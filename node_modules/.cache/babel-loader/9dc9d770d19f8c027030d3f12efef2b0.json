{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rhea/data/projects/codeforcesapi/src/UserContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserContextProvider = props => {\n  _s();\n\n  const [user1, setUser1] = useState({});\n  const [user2, setUser2] = useState({});\n\n  const clearInputs = () => {\n    setUser1({});\n    setUser2({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user1,\n      user2,\n      setUser1,\n      setUser2,\n      clearInputs\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserContextProvider, \"oZVV1nSLlKv9JgCl470T5+UWy7A=\");\n\n_c = UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["/home/rhea/data/projects/codeforcesapi/src/UserContext.js"],"names":["React","createContext","useState","UserContext","UserContextProvider","props","user1","setUser1","user2","setUser2","clearInputs","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,aAAd,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAO,MAAMC,WAAW,gBAACF,aAAa,EAA/B;AACP,OAAO,MAAMG,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACM,KAAD,EAAOC,QAAP,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;;AACA,QAAMQ,WAAW,GAAC,MAAI;AAClBH,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAHD;;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACH,MAAAA,KAAD;AAAOE,MAAAA,KAAP;AAAaD,MAAAA,QAAb;AAAsBE,MAAAA,QAAtB;AAA+BC,MAAAA;AAA/B,KAA7B;AAAA,cACKL,KAAK,CAACM;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAZM;;GAAMP,mB;;KAAAA,mB","sourcesContent":["import React,{createContext,useState} from 'react'\nexport const UserContext=createContext();\nexport const UserContextProvider = (props) => {\n    const [user1,setUser1]=useState({});\n    const [user2,setUser2]=useState({});\n    const clearInputs=()=>{\n        setUser1({});\n        setUser2({});\n    }\n    return (\n        <UserContext.Provider value={{user1,user2,setUser1,setUser2,clearInputs}}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}